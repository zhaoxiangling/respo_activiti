<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sxt.sys.mapper.RoleMapper">
	<resultMap id="BaseResultMap" type="com.sxt.sys.domain.Role">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="available" property="available"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, remark, available
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_role
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from sys_role
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.sxt.sys.domain.Role">
		insert into sys_role (id, name, remark,
		available)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR},
		#{available,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.sxt.sys.domain.Role">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="available != null">
				available,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="available != null">
				#{available,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.sxt.sys.domain.Role">
		update sys_role
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="available != null">
				available = #{available,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.sxt.sys.domain.Role">
		update sys_role
		set name = #{name,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		available = #{available,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 查询 -->
	<select id="queryAllRole" resultMap="BaseResultMap"
		parameterType="com.sxt.sys.domain.Role">
		select
		<include refid="Base_Column_List" />
		from sys_role
		<where>
			<if test="name!=null">
				and name like "%"#{name}"%"
			</if>
			<if test="remark!=null">
				and remark like "%"#{remark}"%"
			</if>
			<if test="available!=null">
				and available =#{available}
			</if>
		</where>
	</select>
	
	 
  <!--   //根据角色ID删除角色和权限之间的关系 -->
  <delete id="deleteRolePermissionByRoleId">
  	delete from sys_role_permission where rid=#{value}
  </delete>
	
	<!-- //保存角色和权限之间的关系 -->
	<insert id="saveRolePermission">
		insert into sys_role_permission(rid,pid) values(#{param1},#{param2})
	</insert>
	
	<!-- 根据用户ID查询用户拥有的角色 -->
	<select id="queryRolesByUserId"  resultMap="BaseResultMap">
		select t1.* from sys_role t1 inner join sys_role_user t2 
		on(t1.id=t2.rid) where t2.uid=#{param1} and t1.available=#{param2}
	</select>
</mapper>